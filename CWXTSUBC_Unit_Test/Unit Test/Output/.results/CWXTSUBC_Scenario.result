<?xml version="1.0" encoding="UTF-8"?>
<?totaltestVersion 19.2.1.v20180920-0235_707?>
<!--Topaz for Total Test 19.2.1.v20180920-0235_707 Oct 17, 2018 8:33:27 PM-->
<result:result xmlns:result="http://www.compuware.com/model/xml/result"><result:testsuite errorCount="0" failureCount="1" testCount="6" testsuite="platform:/resource/CWXTSUBC_Unit_Test/Unit%20Test/Output/Last%20Execution/CWXTSUBC_Scenario.archive#Unit%20Test%5C.temp/CWXTSUBC_Scenario.testsuite"><result:testscenarios errorCount="0" failureCount="1" testCount="6" testscenario="platform:/resource/CWXTSUBC_Unit_Test/Unit%20Test/Output/Last%20Execution/CWXTSUBC_Scenario.archive#Unit%20Test/Scenarios/CWXTSUBC_Scenario.testscenario"><result:testcases errorCount="0" failureCount="0" testCount="3" testcase="platform:/resource/CWXTSUBC_Unit_Test/Unit%20Test/Output/Last%20Execution/CWXTSUBC_Scenario.archive#Unit%20Test/Scenarios/CWXTSUBC_Scenario.testscenario%23CWXTSUBCCase1"><result:results expectedAssert="=" expectedValue="S" expression="'S' eq output.arg0.EMP_TYPE.EMP_TYPE" name="Check for EMP_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="55000.00" expression="BigDecimalCreator.make('55000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0" name="Check for SALES_AMOUNT" result="Success"/><result:results expectedAssert="=" expectedValue="3300.00" expression="BigDecimalCreator.make('3300.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="1" testCount="3" testcase="platform:/resource/CWXTSUBC_Unit_Test/Unit%20Test/Output/Last%20Execution/CWXTSUBC_Scenario.archive#Unit%20Test/Scenarios/CWXTSUBC_Scenario.testscenario%23CWXTSUBCCase2"><result:results expectedAssert="=" expectedValue="S" expression="'S' eq output.arg0.EMP_TYPE.EMP_TYPE" name="Check for EMP_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="25000.00" expression="BigDecimalCreator.make('25000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0" name="Check for SALES_AMOUNT" result="Success"/><result:results actualValue="1000.00" expectedAssert="=" expectedValue="2000.00" expression="BigDecimalCreator.make('2000.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" message="Check for COMM_TOTAL failed" name="Check for COMM_TOTAL" result="Failure"/></result:testcases></result:testscenarios></result:testsuite></result:result>